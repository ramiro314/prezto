#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# Customize to your needs...

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f "${ZDOTDIR:-$HOME}/.zprezto/modules/prompt/.p10k.zsh" ]] || \
source "${ZDOTDIR:-$HOME}/.zprezto/modules/prompt/.p10k.zsh"

# iTerm2 Shell Integration
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"

# Utility function for checking current directory
function assert-pwd() {
  # these are not true/false but EXIT CODES
  # 0 = all good, 1 = bad
  if [[ "$PWD" =~ $1 ]] ; then
    return 0
  fi
  echo 'Not in correct directory $1 - commands wont run'
  return 1
}

###########################
# Docker Helper Functions #
###########################

start-docker(){
  docker-machine start
  eval "$(docker-machine env)"
}

dbash() {
  docker exec -ti "$(did $1)" bash
}

did() {
  dpa | grep $1 | awk '{ print $1 }'
}

dpa() {
  docker ps -a
}

diclean() {
  docker rmi -f $(docker images --filter 'dangling=true' -q --no-trunc)
}

dstart() {
  echo "restarting $1"
  docker restart "$(did $1)" &> /dev/null;
  sleep 1;
  echo "$(dstatus $1)";
}

dstop() {
  docker stop "$(did $1)"
}

dstatus () {
  if [ $# -eq 0 ]; then
    docker ps -a --format 'table {{ .Names }}\t{{ .ID }}\t{{ .Status }}'
  else
    local mystatus="$(docker ps -a | grep $1 | awk '{$3=$4=$5=$6=$12=$13=""; print $0}')";
    local tempstatus="$(echo $mystatus | awk '{print $3}')";
    local is_open=0;
    echo "$mystatus"
    [[ "$tempstatus" == 'Up' ]] && local is_open=1;
    return "$is_open"
  fi
}

dclean() {
  docker rm -v $(docker ps -q -f status=exited)
}

dlogs() {
  dstatus "$1";
  local continue_when="$?";
  local when_count=0;
  if [[ "${@:2}" == "-f" ]]; then
    local last_start=$(date +%s)
    local attempt_num=0
    while [ $when_count -lt 7 ];do
      if [[ true || $* == *--since-restart* ]]; then
        docker logs "$(did $1)" "${@:2}" --since "$last_start";
      else
        docker logs "$(did $1)" "${@:2}";
      fi
      echo "***";
      echo "* Restarting in 5 seconds";
      echo "***";

      sleep 5;
      dstatus "$1";
      if [[ "$?" -ne "0" ]]; then
        when_count=0;
      else
        when_count="$when_count"+1;
      fi
    done

    echo "***";
    echo "* Exiting because $1 is down";
    echo "***";
  else
    docker logs "$(did $1)" "${@:2}"
  fi
}

dnuke() {
  docker rm `docker ps -aq --no-trunc --filter "status=exited"`
  docker rmi `docker images --filter 'dangling=true' -q --no-trunc`
  docker rm $(docker ps -a -q)
  docker rmi $(docker images -q)
}

#####################
# Upstart Functions #
#####################

function upstart-web () {

    function pre-start() {
        echo '--- Running Pre-Start ---'
        docker-compose -f docker-compose-dev.yaml up -d
        rvm .
        bundle install
        gem install foreman
        foreman run ./docker/initialize_database_dev.sh
        rake db:migrate
        rake db:seed
    }

    function shutdown(){
        echo '--- Running Shutdown ---'
        docker-compose -f docker-compose-dev.yaml down
        docker volume prune -f
    }

	if ! assert-pwd 'upstart_web'
	then
		return 1
	fi
	case $1 in
		('pre-start') pre-start
			return 0 ;;
		('shutdown') shutdown
			return 0 ;;
		('reset') shutdown
		    pre-start
		    return 0 ;;
		(*) echo -n "unknown upstart-web command"
			return 1 ;;
	esac
}

bt() {
  cd "${ZDOTDIR:-$HOME}/Dev/Upstart/upstart_web/client"
  yarn install
  yarn build:test
}
